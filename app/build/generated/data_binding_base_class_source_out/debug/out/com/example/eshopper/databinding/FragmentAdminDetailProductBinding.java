// Generated by view binder compiler. Do not edit!
package com.example.eshopper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.eshopper.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAdminDetailProductBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputEditText amountProduct;

  @NonNull
  public final TextView btnCategory;

  @NonNull
  public final TextInputEditText descProduct;

  @NonNull
  public final ImageView imageAdd;

  @NonNull
  public final ImageView imageBack;

  @NonNull
  public final ImageView imageLoad;

  @NonNull
  public final ImageView imageProduct;

  @NonNull
  public final LinearLayout layoutHead;

  @NonNull
  public final LinearLayout layoutHeader;

  @NonNull
  public final LinearLayout layoutInfo;

  @NonNull
  public final TextInputEditText nameProductEt;

  @NonNull
  public final TextInputEditText priceEt;

  @NonNull
  public final TextView productTitle;

  @NonNull
  public final TextInputEditText typeProduct;

  private FragmentAdminDetailProductBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputEditText amountProduct, @NonNull TextView btnCategory,
      @NonNull TextInputEditText descProduct, @NonNull ImageView imageAdd,
      @NonNull ImageView imageBack, @NonNull ImageView imageLoad, @NonNull ImageView imageProduct,
      @NonNull LinearLayout layoutHead, @NonNull LinearLayout layoutHeader,
      @NonNull LinearLayout layoutInfo, @NonNull TextInputEditText nameProductEt,
      @NonNull TextInputEditText priceEt, @NonNull TextView productTitle,
      @NonNull TextInputEditText typeProduct) {
    this.rootView = rootView;
    this.amountProduct = amountProduct;
    this.btnCategory = btnCategory;
    this.descProduct = descProduct;
    this.imageAdd = imageAdd;
    this.imageBack = imageBack;
    this.imageLoad = imageLoad;
    this.imageProduct = imageProduct;
    this.layoutHead = layoutHead;
    this.layoutHeader = layoutHeader;
    this.layoutInfo = layoutInfo;
    this.nameProductEt = nameProductEt;
    this.priceEt = priceEt;
    this.productTitle = productTitle;
    this.typeProduct = typeProduct;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdminDetailProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdminDetailProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_admin_detail_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdminDetailProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountProduct;
      TextInputEditText amountProduct = ViewBindings.findChildViewById(rootView, id);
      if (amountProduct == null) {
        break missingId;
      }

      id = R.id.btnCategory;
      TextView btnCategory = ViewBindings.findChildViewById(rootView, id);
      if (btnCategory == null) {
        break missingId;
      }

      id = R.id.descProduct;
      TextInputEditText descProduct = ViewBindings.findChildViewById(rootView, id);
      if (descProduct == null) {
        break missingId;
      }

      id = R.id.imageAdd;
      ImageView imageAdd = ViewBindings.findChildViewById(rootView, id);
      if (imageAdd == null) {
        break missingId;
      }

      id = R.id.imageBack;
      ImageView imageBack = ViewBindings.findChildViewById(rootView, id);
      if (imageBack == null) {
        break missingId;
      }

      id = R.id.imageLoad;
      ImageView imageLoad = ViewBindings.findChildViewById(rootView, id);
      if (imageLoad == null) {
        break missingId;
      }

      id = R.id.imageProduct;
      ImageView imageProduct = ViewBindings.findChildViewById(rootView, id);
      if (imageProduct == null) {
        break missingId;
      }

      id = R.id.layout_head;
      LinearLayout layoutHead = ViewBindings.findChildViewById(rootView, id);
      if (layoutHead == null) {
        break missingId;
      }

      id = R.id.layoutHeader;
      LinearLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.layout_info;
      LinearLayout layoutInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutInfo == null) {
        break missingId;
      }

      id = R.id.nameProductEt;
      TextInputEditText nameProductEt = ViewBindings.findChildViewById(rootView, id);
      if (nameProductEt == null) {
        break missingId;
      }

      id = R.id.priceEt;
      TextInputEditText priceEt = ViewBindings.findChildViewById(rootView, id);
      if (priceEt == null) {
        break missingId;
      }

      id = R.id.productTitle;
      TextView productTitle = ViewBindings.findChildViewById(rootView, id);
      if (productTitle == null) {
        break missingId;
      }

      id = R.id.typeProduct;
      TextInputEditText typeProduct = ViewBindings.findChildViewById(rootView, id);
      if (typeProduct == null) {
        break missingId;
      }

      return new FragmentAdminDetailProductBinding((RelativeLayout) rootView, amountProduct,
          btnCategory, descProduct, imageAdd, imageBack, imageLoad, imageProduct, layoutHead,
          layoutHeader, layoutInfo, nameProductEt, priceEt, productTitle, typeProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
