// Generated by view binder compiler. Do not edit!
package com.example.eshopper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.eshopper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.prnd.readmore.ReadMoreTextView;

public final class HomeProductDetailItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final CardView cardViewDetail;

  @NonNull
  public final ImageView delivery;

  @NonNull
  public final ImageView free;

  @NonNull
  public final View line;

  @NonNull
  public final ReadMoreTextView productDesc;

  @NonNull
  public final ImageView productImage;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productPrice;

  @NonNull
  public final ImageView refurn;

  private HomeProductDetailItemBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView cardView1, @NonNull CardView cardViewDetail, @NonNull ImageView delivery,
      @NonNull ImageView free, @NonNull View line, @NonNull ReadMoreTextView productDesc,
      @NonNull ImageView productImage, @NonNull TextView productName,
      @NonNull TextView productPrice, @NonNull ImageView refurn) {
    this.rootView = rootView;
    this.cardView1 = cardView1;
    this.cardViewDetail = cardViewDetail;
    this.delivery = delivery;
    this.free = free;
    this.line = line;
    this.productDesc = productDesc;
    this.productImage = productImage;
    this.productName = productName;
    this.productPrice = productPrice;
    this.refurn = refurn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomeProductDetailItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomeProductDetailItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_product_detail_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomeProductDetailItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.cardViewDetail;
      CardView cardViewDetail = ViewBindings.findChildViewById(rootView, id);
      if (cardViewDetail == null) {
        break missingId;
      }

      id = R.id.delivery;
      ImageView delivery = ViewBindings.findChildViewById(rootView, id);
      if (delivery == null) {
        break missingId;
      }

      id = R.id.free;
      ImageView free = ViewBindings.findChildViewById(rootView, id);
      if (free == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.productDesc;
      ReadMoreTextView productDesc = ViewBindings.findChildViewById(rootView, id);
      if (productDesc == null) {
        break missingId;
      }

      id = R.id.productImage;
      ImageView productImage = ViewBindings.findChildViewById(rootView, id);
      if (productImage == null) {
        break missingId;
      }

      id = R.id.productName;
      TextView productName = ViewBindings.findChildViewById(rootView, id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.productPrice;
      TextView productPrice = ViewBindings.findChildViewById(rootView, id);
      if (productPrice == null) {
        break missingId;
      }

      id = R.id.refurn;
      ImageView refurn = ViewBindings.findChildViewById(rootView, id);
      if (refurn == null) {
        break missingId;
      }

      return new HomeProductDetailItemBinding((RelativeLayout) rootView, cardView1, cardViewDetail,
          delivery, free, line, productDesc, productImage, productName, productPrice, refurn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
